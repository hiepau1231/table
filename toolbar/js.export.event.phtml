<script type="text/javascript">
    function generatePDF2(pdfMake, rowData) {
        var body = [[{
            alignment: 'center',
            bold: true,
            colSpan: 2,
            text: 'Detail Information'
        }, {}]];

        for (var field of Object.keys(rowData)) {
            body.push([{
                bold: true,
                text: field
            }, {
                text: rowData[field]
            }]);
        }

        var layout = {
            fillColor: function(i, node) {
                return (
                    (i !== 0) &&
                    ((i - 1) % 2 === 0)
                ) ? '#e7ecf1' : null;
            },
            hLineColor: function(i, node) {
                return (i === 1) ? 'black' : '#aaaaaa';
            },
            hLineWidth(i, node) {
                if (
                    (i === 0) ||
                    (i === node.table.body.length)
                ) {
                    return 0;
                }
                return (i === node.table.headerRows) ? 1 : 0.5;
            },
            paddingLeft: function(i, node) {
                return (i === 0) ? 1 : 3;
            },
            paddingRight: function(i, node) {
                return (i === (node.table.widths.length - 1)) ? 0 : 3;
            },
            vLineWidth: function(i, node) {
                return 0;
            }
        };
        var doc = {
            content: [{
                layout: layout,
                table: {
                    body: body,
                    headerRows: 1,
                    widths: [120, '*']
                }
            }],
            defaultStyle: {
                fontSize: 8,
                margin: [0, 5, 0, 15]
            },
            pageMargins: [20, 20, 20, 20],
            pageOrientation: 'portrait',
            pageSize: 'A4'
        };

        pdfMake.createPdf(doc).getBase64(function(data) {
            $.ajax({
                url: '/default/reporting/savereport',
                cache: false,
                data: {
                    fileData: data
                },
                method: 'POST',
                beforeSend: function(xhr) {
                    $.xhrPool.push(xhr);
                },
                error: function(xhr, status, error) {
                    var i = $.xhrPool.indexOf(xhr);
                    if (i > -1) {
                        $.xhrPool.splice(i, 1);
                    }
                    showMessage('Something wrong happened!', true);
                },
                success: function(result, status, xhr) {
                    if ($.type(result) == 'array') {
                        window.location.replace('<?php echo $this->baseUrl('/default/reporting/createtextreport?reportid='); ?>' + result[1]);
                    } else {
                        showMessage('Cannot create export file!', true);
                    }
                }
            });
        });
    }

    // Add a custom cell renderer for the export button
    var exportButtonRenderer = function(params) {
        return '<button class="export-button">Export</button>';
    };

    // Add the custom cell renderer to the first column
    dataGridApi.getColumnDefs()[0].cellRenderer = exportButtonRenderer;

    // Add click event listener for the export button
    dataGridApi.addEventListener('cellClicked', function(event) {
        if (event.column.getColId() === dataGridApi.getColumnDefs()[0].field && event.event.target.classList.contains('export-button')) {
            var rowNode = event.node;
            if (!rowNode) {
                showMessage('No data available for exporting!', true);
                return;
            }
            var content = [hiddenChart.exporting.pdfmake];
            Promise.all(content).then(function(content) {
                generatePDF2(content[0], rowNode.data);
            });
        }
    });
</script>