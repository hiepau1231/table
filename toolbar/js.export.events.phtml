<script type="text/javascript">
    function generatePDF1(pdfMake) {
        // Get visible columns
        var visibleColumns = dataGridApi.columnApi.getAllDisplayedColumns();
        var headerRow = [];
        visibleColumns.forEach(function(column, index) {
            if (index < 5) {
                headerRow.push({
                    bold: true,
                    text: column.getColDef().headerName
                });
            }
        });

        if (headerRow.length == 0) {
            showMessage('You must choose to display at least 1 field for exporting!', true);
            return;
        }

        var body = [headerRow];

        // Get current data from ag-Grid
        var currentData = [];
        dataGridApi.forEachNodeAfterFilterAndSort(function(node) {
            currentData.push(node.data);
        });

        currentData.forEach(function(row) {
            var data = [];
            headerRow.forEach(function(headerCell) {
                data.push({
                    'text': row[headerCell.text]
                });
            });
            body.push(data);
        });

        var layout = {
            fillColor: function(i, node) {
                return (
                    (i !== 0) &&
                    ((i - 1) % 2 === 0)
                ) ? '#e7ecf1' : null;
            },
            hLineColor: function(i, node) {
                return (i === 1) ? 'black' : '#aaaaaa';
            },
            hLineWidth(i, node) {
                if (
                    (i === 0) ||
                    (i === node.table.body.length)
                ) {
                    return 0;
                }
                return (i === node.table.headerRows) ? 1 : 0.5;
            },
            paddingLeft: function(i, node) {
                return (i === 0) ? 1 : 3;
            },
            paddingRight: function(i, node) {
                return (i === (node.table.widths.length - 1)) ? 0 : 3;
            },
            vLineWidth: function(i, node) {
                return 0;
            }
        };
        var doc = {
            content: [{
                layout: layout,
                table: {
                    body: body,
                    headerRows: 1,
                    widths: ['20%', '20%', '20%', '20%', '20%']
                }
            }],
            defaultStyle: {
                fontSize: 8,
                margin: [0, 5, 0, 15]
            },
            pageMargins: [20, 20, 20, 20],
            pageOrientation: 'landscape',
            pageSize: 'A4'
        };

        pdfMake.createPdf(doc).getBase64(function(data) {
            $.ajax({
                url: '/default/reporting/savereport',
                cache: false,
                data: {
                    fileData: data
                },
                method: 'POST',
                beforeSend: function(xhr) {
                    $.xhrPool.push(xhr);
                },
                error: function(xhr, status, error) {
                    var i = $.xhrPool.indexOf(xhr);
                    if (i > -1) {
                        $.xhrPool.splice(i, 1);
                    }
                    showMessage('Something wrong happened!', true);
                },
                success: function(result, status, xhr) {
                    if ($.type(result) == 'array') {
                        window.location.replace('<?php echo $this->baseUrl('/default/reporting/createtextreport?reportid='); ?>' + result[1]);
                    } else {
                        showMessage('Cannot create export file!', true);
                    }
                }
            });
        });
    }

    $('#export').on('click', function() {
        var rowCount = dataGridApi.getDisplayedRowCount();

        if (rowCount == 0) {
            showMessage('No data available for exporting!', true);
            return;
        }
        var content = [hiddenChart.exporting.pdfmake];
        Promise.all(content).then(function(content) {
            generatePDF1(content[0]);
        });
    });
</script>